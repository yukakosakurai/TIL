わすれがちなこと。


設定の場所
1. margin(padding): 1px ; /* 値1つは、上下左右 */ 
2. margin(padding): 1px 2px ; /* 値2つは、上下 左右 */ 
3. margin(padding): 1px 2px 3px ; /* 値3つは、上 左右 下 */ 
margin(padding): 1px 2px 3px 4px ; /* 値4つは、上 右 下 左 （時計まわり）*/ 

リセットcss
ブラウザにはそのブラウザ独自のcssをもともと持っている。これに自分たちのcssが影響を受けないように、リセットcssというものを設定する。

5. * {
6. margin: 0;
7. padding: 0;
8. box-sizing: border-box;


floatとclearfixのまとめ
	横並びにさせたい子要素すべてにfloatを設定する。
　floatを設定した要素を親要素で囲む
  親要素にclearfixを設定する

中央寄せ
テキスト…text-align:center

画像…text-align:center

ブロックレベル要素…　要素の中央寄せは、幅を指定して、余白を作りmargin: 0 auto;を指定する。

idとclassの違い

基本的には、「すべてのスタイルはclass属性を使って適用する」と考えておけば問題ありません。必要に応じてid属性を使うと良いでしょう。スタイルを適用する上でclass属性とid属性を併用することには、メリットもデメリットもあります。

■class属性に加えてid属性も併用する場合のメリット
id名が1ページ中に1回しか登場しないという仕様は、スタイルシートのソースを読み解く際にも役立ちます。装飾に「id」が使われていれば、「どこか一意に特定できる部分だけに限定した装飾なのだ」と簡単に把握できますから。

■class属性に加えてid属性も併用する場合のデメリット
スタイルの適用には優先順位があり、「idはclassよりも優先される」という規則があります(※次のページで紹介)。このため、idとclassが複雑に混在する大規模なソースでは、何がどう適用されるのか「優先度の判別」が難しくなってしまう場合もあります。そのため、「極力idを使わずにclassだけで記述する方が楽」という考え方もあります。

id属性を使うかどうかは、その要素を「一意に特定する必要があるか」や「一意に特定する方が分かりやすいか」を基準に判断すると良いでしょう。どちらにも当てはまらないのなら、class属性を使っておけば問題ありません。
