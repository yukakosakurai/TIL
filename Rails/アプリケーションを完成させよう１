scaffoldとは

一つのひな形を作成してくれもの。
使用したいデータ型を指定してつくりたいように土台作りをする

rails generate（ｇ） scaffold モデル名 カラム名1:データ型1 カラム名2:データ型 2 …

db:migrate わすれずに！

参考：https://techacademy.jp/magazine/7204

これ一個でアプリの土台が作れる優れもの。


pry_byebugとは

アプリケーションに導入し、一度プログラムを停止してそこまでに不具合がないか調べるもの

その変数に今どんな値が入っているか、を確認したい時に使う

使い方
gemfileにgem 'pry-byebug'を入力

bundle install

rbファイルではコード内にbunding.pry
erbファイルでは<% binding.pry %>と入力する。
これらは確認したい処理の下に入力。その時点でのアプリの状態を確認できる

参考：https://qiita.com/ryosuketter/items/da3a38d0d41c7e20a2d6
カリキュラムでは開発スキルアップからアプリケーションを完成させように移動させた


@モデル名　その変数の内容
モデル名_params（params)　ストロングパラメーターで設定したparams情報
モデル名　モデルに入力されたテーブル構造が出力
　　　　　　カラム名など
params[:id] idの中身
a = params[:id]  idの中身
a = params[:id].to_s idの中身
モデル名.find(a) そのモデルについての情報


コマンド
※単にエンター押下すると直前のコマンドを繰り返し実行できる

●実行関連
n               ステップオーバー(next)
s               ステップイン(step)
c               実行継続(continue)
fin             ステップアウト(finish)
restart         最初から実行し直す

●ソースコード
l               ソースコードを表示する(list)。繰り返し実行することでどんどん先を表示する
l=              現在の行を中心に表示する
l-              前の方を表示する
l 1-10          1～10行目を表示する
※listコマンドはどうも使い勝手がよくないので、edでエディタを起動してしまう方がいいかもしれない
ed              エディタを起動する(edit)。環境変数EDITORを参照する

●変数表示
p 変数名        変数の中身を表示
変数名 = 値     変数に代入
v l             ローカル変数表示
disp 変数名     変数をウォッチする
i d             ウォッチしている変数一覧
undisp N        N番目のウォッチ変数を削除

●スタックフレーム
bt              スタックフレーム表示(backtrace, where)
up              フレーム1つ上に移動
down            フレーム1つ下に移動

●ブレークポイント
b N             N行目にブレークポイントを張る(break)
i b             ブレークポイントを表示する
del N           N番目のブレークポイントを削除する 

●ヘルプ
h               ヘルプ表示(help)
h COMMAND       コマンドのヘルプを表示

●irb, pry
irb             irbを起動
pry             pryを起動

エンターだけ押すと直前のコマンドを繰り返し実行する。
byebugに無いコマンドを入力するとRubyのコードとして解釈される。
